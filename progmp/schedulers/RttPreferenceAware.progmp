SCHEDULER RttPreferenceAware;

VAR sbfCandidates = SUBFLOWS.FILTER(sbf => sbf.CWND > sbf.SKBS_IN_FLIGHT + sbf.QUEUED 
    AND !sbf.THROTTLED AND !sbf.LOSSY);

IF(sbfCandidates.EMPTY) { RETURN; }

IF (!RQ.EMPTY) { 
    VAR sbfCandidate = sbfCandidates.FILTER(sbf => sbf.HAS_WINDOW_FOR(RQ.TOP) 
        AND !RQ.TOP.SENT_ON(sbf)).MIN(sbf => sbf.RTT); 
    IF (sbfCandidate != NULL) { 
        sbfCandidate.PUSH(RQ.POP()); 
        RETURN; 
    } 
} 

IF (Q.EMPTY) { RETURN; }

VAR considerBackup = SUBFLOWS.FILTER(sbf => sbf.RTT < R1 AND !sbf.IS_BACKUP).EMPTY;

IF (considerBackup) {
    sbfCandidates.MIN(sbf => sbf.RTT).PUSH(Q.POP());
} ELSE {
    sbfCandidates.FILTER(sbf => !sbf.IS_BACKUP).MIN(sbf => sbf.RTT).PUSH(Q.POP());
}